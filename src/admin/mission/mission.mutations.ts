import { useMutation, useQueryClient } from "@tanstack/react-query";
import { createMission, updateMission, deleteMission } from "./mission.service";
import { MissionFormType } from "./mission.schema";
import { showSuccessToast, showErrorToast } from "../../shared/utils/mutationToastHandler";

export const useCreateMission = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: createMission,
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["mission"] });
      showSuccessToast("Misi√≥n creada correctamente", "üöÄ");
    },
    onError: (error: unknown) => {
      showErrorToast("Error al crear misi√≥n", error, "‚ùå");
    },
  });
};

export const useUpdateMission = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: ({ id, data }: { id: number; data: Partial<MissionFormType> }) =>
      updateMission(id, data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["mission"] });
      showSuccessToast("Misi√≥n actualizada correctamente", "‚úèÔ∏è");
    },
    onError: (error: unknown) => {
      showErrorToast("Error al actualizar misi√≥n", error, "‚ùå");
    },
  });
};

export const useDeleteMission = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: deleteMission,
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["mission"] });
      showSuccessToast("Misi√≥n eliminada correctamente", "üóëÔ∏è");
    },
    onError: (error: unknown) => {
      showErrorToast("Error al eliminar misi√≥n", error, "‚ö†Ô∏è");
    },
  });
};
